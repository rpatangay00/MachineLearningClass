library(ggplot2)
df <-(diamonds)
head(df)
colnames(df)
library(ggplot2)
df <-(diamonds)
head(df)
colnames(df)
set.seed(1234)
cut<- sample(1:nrow(df), nrow(df)*0.2, replace= FALSE)
smaller <- df[cut,]
i <- sample(1:nrow(smaller), nrow(smaller)*0.8, replace=FALSE)
train <- smaller[i,]
test <- smaller[-i,]
library(e1071)
library(MASS)
svmRegression <- svm(price~carat+depth+table+x+y+z, data=train)
svmRegression
svmLinear <- tune(e1071::svm, price~carat+depth+table+x+y+z, data=train, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(e1071::svm, price~carat+depth+table+x+y+z, data=train, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmRadial = tune(e1071::svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
svmRadial = tune(e1071::svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
svmRadial = tune(e1071::svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
svmRadial = tune(e1071::svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
svmRadial = tune(e1071::svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
package(e1071)
svmRadial = tune(svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
svmRadial = tune(svm,price~carat+depth+table+x+y+z, data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100)))
library(tidyverse)
library(ggplot2)
df <-(diamonds)
head(df)
colnames(df)
set.seed(1234)
cut<- sample(1:nrow(df), nrow(df)*0.2, replace= FALSE)
smaller <- df[cut,]
i <- sample(1:nrow(smaller), nrow(smaller)*0.8, replace=FALSE)
train <- smaller[i,]
test <- smaller[-i,]
trainsmall<-head(train, 2000)
testsmall<-head(test,500)
svm1<-svm(Price~., data=trainsmall, kernel="linear", cost=10, scale=TRUE)
svmLinear = tune(e1071::svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(MASS)
library(tidyverse)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(MASS)
library(tidyverse)
install.packages("ggplot2")
library(ggplot2)
df <-(diamonds)
head(df)
colnames(df)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(MASS)
library(tidyverse)
install.packages("ggplot2")
library(ggplot2)
set.seed(1234)
cut<- sample(1:nrow(df), nrow(df)*0.2, replace= FALSE)
smaller <- df[cut,]
i <- sample(1:nrow(smaller), nrow(smaller)*0.8, replace=FALSE)
train <- smaller[i,]
test <- smaller[-i,]
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(MASS)
library(tidyverse)
library(ggplot2)
set.seed(1234)
cut<- sample(1:nrow(df), nrow(df)*0.2, replace= FALSE)
smaller <- df[cut,]
i <- sample(1:nrow(smaller), nrow(smaller)*0.8, replace=FALSE)
train <- smaller[i,]
test <- smaller[-i,]
library(e1071)
library(MASS)
svmRegression <- svm(price~carat+depth+table+x+y+z, data=train)
svmRegression
svmRegression <- svm(price~carat+depth+table+x+y+z, data=train)
svmRegression
trainsmall<-head(train, 2000)
testsmall<-head(test,500)
svm1<-svm(Price~., data=trainsmall, kernel="linear", cost=10, scale=TRUE)
df <-(diamonds)
head(df)
colnames(df)
svmRegression <- svm(price~carat+depth+table+x+y+z, data=train)
svmRegression
trainsmall<-head(train, 2000)
testsmall<-head(test,500)
svm1<-svm(price~., data=trainsmall, kernel="linear", cost=10, scale=TRUE)
summary(svm1)
svmLinear = tune(svm, price~carat+depth+table+x+y+z, data=trainsmall, kernel="linear", ranges= list(cost=c(0.1,1,10,100)))
